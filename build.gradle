/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

buildscript {
    ext {
        springBootVersion = '2.7.0'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}


allprojects {

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'


    sourceCompatibility = 11
    targetCompatibility = 11

    group = 'io.myhome.hss'
    version = '0.0.1-SNAPSHOT'

    ext{
        springBootVersion = '2.7.0'
        myHomeVersion = '0.0.1-SNAPSHOT'
        javaxAnnotationApi = '1.3.2'
        jacksonVersion = '2.13.3'
        lombokVersion = '1.18.24'
    }

    java {
        withSourcesJar()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    publishing {

        repositories {
            mavenLocal()
        }
    }

    dependencies {
        implementation ("io.myhome.cm:myhome-cm-common:${myHomeVersion}")

        implementation ("javax.annotation:javax.annotation-api:${javaxAnnotationApi}")
        implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

        compileOnly "org.projectlombok:lombok:${lombokVersion}"

        annotationProcessor "javax.annotation:javax.annotation-api:${javaxAnnotationApi}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"


        // Use JUnit Jupiter for testing.
        testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    }

    tasks.named('compileJava') {
        inputs.files(tasks.named('processResources'))
    }
}

